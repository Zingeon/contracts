version: '3'

services:
  rabbitmq:
    image: 'rabbitmq:3-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia
      - ./rabbitmq/log:/var/log/rabbitmq

  mongodb:
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb/data:/data/db

  publisher:
    build:
      context: .
      dockerfile: docker/publisher/Dockerfile
    command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- npm run start-publisher'
    depends_on:
    - rabbitmq
    volumes:
      - "./queue:/app"
      - "node_modules:/app/node_modules"

  worker:
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    command: sh -c '/bin/wait-for-it.sh rabbitmq:5672 --timeout=30 -- npm run start-worker'
    depends_on:
    - rabbitmq
    - mongodb
    volumes:
      - "./queue:/app"
      - "node_modules:/app/node_modules"

  php:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    ports:
      - '8000:8000'
    depends_on:
      - mongodb
    volumes:
      - "./api:/app"
      - "vendor:/app/vendor"

volumes:
  node_modules:
  vendor:
